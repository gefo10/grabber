{"ast":null,"code":"var _jsxFileName = \"/Users/gefo/gefo/SideProjects/grabber-client/src/components/Chat.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '@/store/hooks';\nimport { addMessage } from '@/store/slices/messageSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const messages = useAppSelector(state => state.messages);\n  const dispatch = useAppDispatch();\n  const [messageInput, setMessageInput] = useState('');\n  //const [messages, setMessages] = useState<ChatMessage[]>([]);\n  //const [message, setMessage] = useState<ChatMessage | null>(null);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"messages\",\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [message.user_id, \": \", message.content]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"m\",\n          autoComplete: \"off\",\n          value: messageInput,\n          onChange: setMessageInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this);\n        dispatch(addMessage({\n          id: 5,\n          conversation_id: 1,\n          user_id: 1,\n          content: \"Hello wor\"\n        }));\n      },\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"cSEEHJKJu7/SVQJN4o9NUcPDpjs=\", false, function () {\n  return [useAppSelector, useAppDispatch];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useAppDispatch","useAppSelector","addMessage","jsxDEV","_jsxDEV","Chat","_s","messages","state","dispatch","messageInput","setMessageInput","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","map","message","user_id","content","onClick","type","autoComplete","value","onChange","conversation_id","_c","$RefreshReg$"],"sources":["/Users/gefo/gefo/SideProjects/grabber-client/src/components/Chat.tsx"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '@/store/hooks';\nimport { addMessage } from '@/store/slices/messageSlice';\n\nexport interface ChatMessage {\n    id: number;\n    message: string;\n    sender: string;\n    timestamp: string;\n}\n\nconst Chat: React.FC = () => {\n\n    \n    const messages = useAppSelector((state) => state.messages);\n    const dispatch = useAppDispatch();\n    const [messageInput, setMessageInput] = useState<string>('');\n    //const [messages, setMessages] = useState<ChatMessage[]>([]);\n    //const [message, setMessage] = useState<ChatMessage | null>(null);\n\n\n\n    return (\n        <div className=\"chat\">\n        <p>Chat</p>\n            <ul id=\"messages\">\n                { messages.map((message) => (\n                    <li key={message.id}>{message.user_id}: {message.content}</li>\n                )) }\n            </ul>\n            <button onClick={() => {\n                <input type=\"text\" id=\"m\" autoComplete=\"off\" value={messageInput} onChange={setMessageInput}/>\n                dispatch(addMessage({ id: 5, conversation_id: 1, user_id: 1, content: \"Hello wor\" }));\n            }}>Send</button>\n\n        </div>\n    )\n}\n\nexport default Chat;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,EAAEC,cAAc,QAAQ,eAAe;AAC9D,SAASC,UAAU,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASzD,MAAMC,IAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAGzB,MAAMC,QAAQ,GAAGN,cAAc,CAAEO,KAAK,IAAKA,KAAK,CAACD,QAAQ,CAAC;EAC1D,MAAME,QAAQ,GAAGT,cAAc,CAAC,CAAC;EACjC,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAS,EAAE,CAAC;EAC5D;EACA;;EAIA,oBACIK,OAAA;IAAKQ,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACrBT,OAAA;MAAAS,QAAA,EAAG;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACPb,OAAA;MAAIc,EAAE,EAAC,UAAU;MAAAL,QAAA,EACXN,QAAQ,CAACY,GAAG,CAAEC,OAAO,iBACnBhB,OAAA;QAAAS,QAAA,GAAsBO,OAAO,CAACC,OAAO,EAAC,IAAE,EAACD,OAAO,CAACE,OAAO;MAAA,GAA/CF,OAAO,CAACF,EAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA0C,CAChE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACLb,OAAA;MAAQmB,OAAO,EAAEA,CAAA,KAAM;QACnB,aAAAnB,OAAA;UAAOoB,IAAI,EAAC,MAAM;UAACN,EAAE,EAAC,GAAG;UAACO,YAAY,EAAC,KAAK;UAACC,KAAK,EAAEhB,YAAa;UAACiB,QAAQ,EAAEhB;QAAgB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;QAC9FR,QAAQ,CAACP,UAAU,CAAC;UAAEgB,EAAE,EAAE,CAAC;UAAEU,eAAe,EAAE,CAAC;UAAEP,OAAO,EAAE,CAAC;UAAEC,OAAO,EAAE;QAAY,CAAC,CAAC,CAAC;MACzF,CAAE;MAAAT,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEf,CAAC;AAEd,CAAC;AAAAX,EAAA,CA1BKD,IAAc;EAAA,QAGCJ,cAAc,EACdD,cAAc;AAAA;AAAA6B,EAAA,GAJ7BxB,IAAc;AA4BpB,eAAeA,IAAI;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}